<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>小叨笔记</title>
    <link>https://www.stormwan.com/</link>
    <description>Recent content on 小叨笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 30 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.stormwan.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>基于websocket&#43;hyperf开发数据大屏系统</title>
      <link>https://www.stormwan.com/post/ji-yu-websocket&#43;hyperf-kai-fa-shu-ju-da-ping-xi-tong/</link>
      <pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/ji-yu-websocket&#43;hyperf-kai-fa-shu-ju-da-ping-xi-tong/</guid>
      <description>背景 需要在大屏上展示订单趋势、订单国家、店铺数、商品排行、页面访问量等数据 选型 后端：hyperf 前端：react 后端 地图点亮订单国家城市点，</description>
    </item>
    
    <item>
      <title>文章slug生成</title>
      <link>https://www.stormwan.com/post/wen-zhang-slug-sheng-cheng/</link>
      <pubDate>Mon, 29 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/wen-zhang-slug-sheng-cheng/</guid>
      <description>背景 文章链接选择 :title 或 :filename 之类的，但是会有中文，不使用中文，又对查找不太方便。 思路 使用 python 将中文转为拼音，然后读取文件内容并进行替换。 中文转拼音示</description>
    </item>
    
    <item>
      <title>PHP常用算法</title>
      <link>https://www.stormwan.com/post/php-chang-yong-suan-fa/</link>
      <pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/php-chang-yong-suan-fa/</guid>
      <description>二分查找 二分查找法需要数组是一个有序的数组 假设我们的数组是一个递增的数组，首先我们需要找到数组的中间位置。 要知道中间位置就需要知道起始位置和</description>
    </item>
    
    <item>
      <title>PHP底层运行机制与原理</title>
      <link>https://www.stormwan.com/post/php-di-ceng-yun-xing-ji-zhi-yu-yuan-li/</link>
      <pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/php-di-ceng-yun-xing-ji-zhi-yu-yuan-li/</guid>
      <description>PHP设计理念及特点 多进程模型：不同请求之间，互补干涉，保证一个请求挂掉不会影响整体服务。 弱类型语言：变量类型并不是一开始就确当不变，运行中</description>
    </item>
    
    <item>
      <title>Redis搭建cluster</title>
      <link>https://www.stormwan.com/post/redis-da-jian-cluster/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/redis-da-jian-cluster/</guid>
      <description>redis cluster在设计的时候，就考虑到了去中心化，去中间件，也就是说，集群中的每个节点都是平等的关系，都是对等的，每个节点都保存各自的数据和</description>
    </item>
    
    <item>
      <title>Elasticsearch原理理解</title>
      <link>https://www.stormwan.com/post/elasticsearch-yuan-li-li-jie/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/elasticsearch-yuan-li-li-jie/</guid>
      <description>理解ES搜索引擎的原理 倒排索引 普通索引 拿唐诗“静夜思”举例： 窗前明月光，疑似地上霜。 举头望明月，低头思故乡。 普通的索引，以诗名作为key，诗</description>
    </item>
    
    <item>
      <title>分布式理论、协议及算法相关</title>
      <link>https://www.stormwan.com/post/fen-bu-shi-li-lun-xie-yi-ji-suan-fa-xiang-guan/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/fen-bu-shi-li-lun-xie-yi-ji-suan-fa-xiang-guan/</guid>
      <description>CAP定理的含义 分布式系统（distributed system）正变得越来越重要，大型网站几乎都是分布式的。 分布式系统的最大难点，就是各个节</description>
    </item>
    
    <item>
      <title>Linux误删数据恢复</title>
      <link>https://www.stormwan.com/post/linux-wu-shan-shu-ju-hui-fu/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/linux-wu-shan-shu-ju-hui-fu/</guid>
      <description>不能保证完全恢复 一、安装恢复工具 1 2 3 4 5 6 7 wget http://zy-res.oss-cn-hangzhou.aliyuncs.com/server/extundelete-0.2.4.tar.bz2 tar -xvjf extundelete-0.2.4.tar.bz2 cd extundelete-0.2.4 ./configure make &amp;amp;&amp;amp; make install extundelete --version 二、删除数据查找 查看文件系统 1 2 3 4 5 6 7 8 df -h # 结果 文件系统 容量</description>
    </item>
    
    <item>
      <title>Linux操作命令</title>
      <link>https://www.stormwan.com/post/linux-cao-zuo-ming-ling/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/linux-cao-zuo-ming-ling/</guid>
      <description>Linux操作命令，初始学习记录Linux常用命令 多通过 man 查看，SEE ALSO 是最好的 安装 源代码形式 绝大多数开源软件都是直接以原码形式发布的 源代码</description>
    </item>
    
    <item>
      <title>Redis知识</title>
      <link>https://www.stormwan.com/post/redis-zhi-shi/</link>
      <pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/redis-zhi-shi/</guid>
      <description>redis分析，基于内存，速度快，kv数据，worker单线程，epoll多路复用解决i/o并发 拓扑模型 redis并发模型 redis（wor</description>
    </item>
    
    <item>
      <title>MySQL实战之SQL</title>
      <link>https://www.stormwan.com/post/mysql-shi-zhan-zhi-sql/</link>
      <pubDate>Mon, 06 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/mysql-shi-zhan-zhi-sql/</guid>
      <description>SQL篇 count(*)这么慢，我该怎么办 count实现方式 MyISAM总行数存在磁盘上, 执行 count(*) 时会直接返回, 效率高, 但是有 where 条件, 一样要扫</description>
    </item>
    
    <item>
      <title>MySQL实战之实用技巧</title>
      <link>https://www.stormwan.com/post/mysql-shi-zhan-zhi-shi-yong-ji-qiao/</link>
      <pubDate>Mon, 06 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/mysql-shi-zhan-zhi-shi-yong-ji-qiao/</guid>
      <description>实用技巧篇 都说InnoDB好，那还要不要使用Memory引擎 自增主键为什么不是连续的 怎么最快地复制一张表 要不要使用分区表 支持range、ha</description>
    </item>
    
    <item>
      <title>Nginx知识</title>
      <link>https://www.stormwan.com/post/nginx-zhi-shi/</link>
      <pubDate>Sun, 05 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/nginx-zhi-shi/</guid>
      <description>一、初识Nginx Nginx的三个主要应用场景 1.静态资源服务 通过本地文件系统提供服务 2.反向代理服务 Nginx的强大性能 缓存 负载均衡 3.A</description>
    </item>
    
    <item>
      <title>MySQL实战之索引</title>
      <link>https://www.stormwan.com/post/mysql-shi-zhan-zhi-suo-yin/</link>
      <pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/mysql-shi-zhan-zhi-suo-yin/</guid>
      <description>索引篇 普通索引和唯一索引，应该怎么选 查询过程 更新过程 MySQL为什么有时候会选错索引 先建一个简单的表，表里有a、b两个字段，并分别建上索引：</description>
    </item>
    
    <item>
      <title>MySQL实战之主从数据一致</title>
      <link>https://www.stormwan.com/post/mysql-shi-zhan-zhi-zhu-cong-shu-ju-yi-zhi/</link>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/mysql-shi-zhan-zhi-zhu-cong-shu-ju-yi-zhi/</guid>
      <description>主从数据一致篇 MySQL是怎么保证数据不丢 只要redo log和binlog保证持久化到磁盘，就能确保MySQL异常重启后，数据可以恢复。 bi</description>
    </item>
    
    <item>
      <title>MySQL实战之问题分析</title>
      <link>https://www.stormwan.com/post/mysql-shi-zhan-zhi-wen-ti-fen-xi/</link>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/mysql-shi-zhan-zhi-wen-ti-fen-xi/</guid>
      <description>问题分析篇 Mysql&amp;quot;抖&amp;quot;一下 可能是flush&amp;quot;脏页&amp;quot; 当内存数据页跟磁盘数据页内容不一致的时候，我们</description>
    </item>
    
    <item>
      <title>PHP7扩展开发之hello word</title>
      <link>https://www.stormwan.com/post/php7-kuo-zhan-kai-fa-zhi-hello-word/</link>
      <pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/php7-kuo-zhan-kai-fa-zhi-hello-word/</guid>
      <description>实验环境Aliyun PHP 7.2.6 (cli) (built: May 23 2019 00:47:11) ( NTS ) Copyright (c) 1997-2018 The PHP Group Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies with Zend OPcache v7.2.6, Copyright (c) 1999-2018, by Zend Technologies 生成代码 PHP为我们提供了生成基本代码的工具 ext</description>
    </item>
    
    <item>
      <title>2017~2018回顾商城重构收获</title>
      <link>https://www.stormwan.com/post/2017-2018-hui-gu-shang-cheng-zhong-gou-shou-huo/</link>
      <pubDate>Thu, 19 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/2017-2018-hui-gu-shang-cheng-zhong-gou-shou-huo/</guid>
      <description>17年Q4年商城重构接入SOA，18年5月上线流量切换完成，旺季PC端Q4日均pv3000万；双11当天，销售额一千万美金，峰值日pv统计1</description>
    </item>
    
    <item>
      <title>MySQL基础架构介绍</title>
      <link>https://www.stormwan.com/post/mysql-ji-chu-jia-gou-jie-shao/</link>
      <pubDate>Thu, 19 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/mysql-ji-chu-jia-gou-jie-shao/</guid>
      <description>Server层 连接器 管理链接, 权限验证 查询缓存 命中则直接返回结果 弊大于利, 不建议使用 mysql8.0版本直接将查询缓存的整块功能移除 分析器 词</description>
    </item>
    
    <item>
      <title>关键词内链替换</title>
      <link>https://www.stormwan.com/post/guan-jian-ci-nei-lian-ti-huan/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/guan-jian-ci-nei-lian-ti-huan/</guid>
      <description>内部链接目标 SEO优化，在博客文章中渲染时对关键词进行替换添加链接1，不改变博客原文 关键词链接到电商商品、活动页、分类页等 解决url收录问题</description>
    </item>
    
    <item>
      <title>分布式锁</title>
      <link>https://www.stormwan.com/post/fen-bu-shi-suo/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/fen-bu-shi-suo/</guid>
      <description>有用到 php laravel 框架 redisLock, 发现还是有一些可以改进的地方, 在网络查找了一些资料, 有文章用 java 开发, 比如对锁的过期时间开启线程, 定时不断的去增加过期时间, 每</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://www.stormwan.com/about/</link>
      <pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/about/</guid>
      <description>普通学校毕业，从业互联网后端开发多年，喜欢探索和学习，期望不断完善自己，提升自己。想有一个地方来记录下经历，有的记录会随时间来修正和调整。 后</description>
    </item>
    
    <item>
      <title>docker应用学习-搭建redis哨兵集群</title>
      <link>https://www.stormwan.com/post/docker-ying-yong-xue-xi-da-jian-redis-shao-bing-ji-qun/</link>
      <pubDate>Thu, 29 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/docker-ying-yong-xue-xi-da-jian-redis-shao-bing-ji-qun/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;基于阿里云 centos7，单机启动多个redis实例&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;安装docker略&#34;&gt;安装docker（略）&lt;/h3&gt;
&lt;h3 id=&#34;安装redis&#34;&gt;安装redis&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;查找redis镜像:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;docker search redis
docker pull docker.io/redis
docker images
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;挂载目录&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;mkdir -p /data/redis_data
cd /data/redis_data
touch redis_6379.conf
vi redis_6379.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;端口配置 redis_6379.conf redis_6380.conf redis_6381.conf&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;配置说明&#34;&gt;配置说明：&lt;/h5&gt;
&lt;p&gt;dir：工作目录
logfile：日志文件在工作目录下
slaveof：指明为主机一的从机
requirepass：redis客户端连接的认证密码，若不需要可不配置
masterauth：主从redis同步的认证密码，与连接密码同，若不需要可不用配置
appendonly：是否需要持久化，yes为需要&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;logfile &amp;#34;redis_6379.log&amp;#34;
port 6379
dir /data
appendonly yes
appendfilename appendonly.aof
requirepass 1234
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;logfile &amp;#34;redis_6380.log&amp;#34;
port 6380
dir /data
appendonly yes
appendfilename appendonly.aof
slaveof 0.0.0.0 6379
masterauth 1234
requirepass 1234
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;logfile &amp;#34;redis_6381.log&amp;#34;
port 6381
dir /data
appendonly yes
appendfilename appendonly.aof
slaveof 0.0.0.0 6379
masterauth 1234
requirepass 1234
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>安装NSQ</title>
      <link>https://www.stormwan.com/post/an-zhuang-nsq/</link>
      <pubDate>Tue, 15 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/an-zhuang-nsq/</guid>
      <description>nsq測試 打開一個終端，啟動nsqlookupd 1 # nsqlookupd --tcp-address=127.0.0.1:4160 --http-address=127.0.0.1:4161 --broadcast-address=127.0.0.1 再打開一個終端，啟動nsq 1 # nsqd --broadcast-address=127.0.0.1 -http-address=127.0.0.1:4151 --lookupd-tcp-address=127.0.0.1:4160 --tcp-address=127.0.0.1:4150 1 curl -d &amp;#34;hello world 1&amp;#34; &amp;#34;http://127.0.0.1:4151/put?topic=test&amp;#34; 1 # nsq_to_file --topic=test --output-dir=/home/work/nsq_log --lookupd-http-address=127.0.0.1:4161</description>
    </item>
    
    <item>
      <title>Vagrant的基本简单使用</title>
      <link>https://www.stormwan.com/post/vagrant-de-ji-ben-jian-dan-shi-yong/</link>
      <pubDate>Sun, 23 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/vagrant-de-ji-ben-jian-dan-shi-yong/</guid>
      <description>一、前言 Vagrant 可以让你使用单一的配置信息来部署一套虚拟环境, 最后打包为一个所谓的 box (就是已经部署好环境的虚拟机器). 你可以手动来安装和配置 box, 也可</description>
    </item>
    
    <item>
      <title>安装Beanstalkd</title>
      <link>https://www.stormwan.com/post/an-zhuang-beanstalkd/</link>
      <pubDate>Sun, 23 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/an-zhuang-beanstalkd/</guid>
      <description>安装 Beanstalkd 下载 解压 安装 1 2 3 4 5 6 7 8 9 10 wget https://github.com/kr/beanstalkd/archive/v1.10.tar.gz -O beanstalkd-1.10.tar.gz tar zxvf beanstalkd-1.10.tar.gz cd beanstalkd-1.10 make make install # 默认安装到 /usr/local/bin ln -s /usr/local/bin/beanstalkd /usr/bin/beanstalkd # 也可以直接yum安装 从EPEL源安装 以下步骤会自动完成</description>
    </item>
    
    <item>
      <title>安装redis</title>
      <link>https://www.stormwan.com/post/an-zhuang-redis/</link>
      <pubDate>Sat, 25 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/an-zhuang-redis/</guid>
      <description>安装 1 2 3 4 5 6 7 8 9 10 11 # 获取安装文件 wget http://download.redis.io/releases/redis-3.2.8.tar.gz # 解压文件 tar -xvzf redis-3.2.8.tar.gz mv redis-3.2.8 /usr/local/redis # 编译安装 cd /usr/local/redis make make install 启动或关闭 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22</description>
    </item>
    
    <item>
      <title>安装Java</title>
      <link>https://www.stormwan.com/post/an-zhuang-java/</link>
      <pubDate>Sat, 25 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/an-zhuang-java/</guid>
      <description>安装Java 1、到 Sun 的官网下载 http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html 选择 accept license ，然后选择适合自己机型的JDK下载。 2、解压文件，修改文件名 1 2 3 4 $ sudo mkdir /usr/lib/jvm $ sudo tar zxvf jdk-8u91-linux-x64.tar.gz -C /usr/lib/jvm $ cd /usr/lib/jvm $ sudo</description>
    </item>
    
    <item>
      <title>安装Memcached</title>
      <link>https://www.stormwan.com/post/an-zhuang-memcached/</link>
      <pubDate>Sat, 25 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/an-zhuang-memcached/</guid>
      <description>安装Memcached 安装libevent依赖 1 2 3 4 5 tar zxvf libevent-2.0.22-stable.tar.gz cd libevent-2.0.22-stable ./configure --prefix=/Data/apps/libs make make install 安装memcached 1 2 3 4 5 tar zxvf memcached-1.4.27.tar.gz cd memcached-1.4.2 ./configure --prefix=/Data/apps/memcached --with-libevent=/Data/apps/libs make make install 启用 通常：</description>
    </item>
    
    <item>
      <title>安装Elasticsearch</title>
      <link>https://www.stormwan.com/post/an-zhuang-elasticsearch/</link>
      <pubDate>Fri, 24 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/an-zhuang-elasticsearch/</guid>
      <description>安装Elasticsearch 安装 Installing Marvel 1 2 3 4 5 6 7 8 9 10 11 12 #Step 1: Install Marvel into Elasticsearch: bin/plugin install license bin/plugin install marvel-agent #Step 2: Install Marvel into Kibana bin/kibana plugin --install elasticsearch/marvel/latest #Step 3: Start Elasticsearch and Kibana bin/elasticsearch bin/kibana #Step 4: Navigate to http://localhost:5601/app/marvel Installing Marvel on Offline</description>
    </item>
    
    <item>
      <title>安装RabbitMQ</title>
      <link>https://www.stormwan.com/post/an-zhuang-rabbitmq/</link>
      <pubDate>Mon, 13 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/an-zhuang-rabbitmq/</guid>
      <description>安装RabbitMQ 环境配置 erlang安装 1 2 3 4 5 6 7 8 9 10 11 12 13 cd /Data/tgz tar zxvf otp_src_18.3.tar.gz cd otp_src_18.3 ./configure --prefix=/usr/local/erlang make make install 增加环境变量 vi /etc/profile 在文件末尾加上如下代码 export PATH=$PATH:/usr/local/erlang/bin 使配</description>
    </item>
    
    <item>
      <title>工厂模式</title>
      <link>https://www.stormwan.com/post/design-patterns/gong-chang-mo-shi/</link>
      <pubDate>Sun, 05 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/design-patterns/gong-chang-mo-shi/</guid>
      <description>工厂模式 提供获取某个对象实例的一个接口，同时使调用代码避免确定实例化基类的步骤。 工厂模式 实际上就是建立一个统一的类实例化的函数接口。统一调用</description>
    </item>
    
    <item>
      <title>迭代器</title>
      <link>https://www.stormwan.com/post/design-patterns/die-dai-qi/</link>
      <pubDate>Sun, 05 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/design-patterns/die-dai-qi/</guid>
      <description>迭代器 可帮助构造特定的对象，那些对象能够提供单一标准接口循环或迭代任何类型的可计数数据。（不是特别常用，在PHP中） 使用场景 访问一个聚合对象</description>
    </item>
    
    <item>
      <title>适配器模式</title>
      <link>https://www.stormwan.com/post/design-patterns/shi-pei-qi-mo-shi/</link>
      <pubDate>Sun, 05 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/design-patterns/shi-pei-qi-mo-shi/</guid>
      <description>什么是适配器 适配器设计模式只是将某个对象的接口适配为另一个对象所期望的接口。 设计情景 假如我们原始的有一个UserInfo的类，提供用户信息的</description>
    </item>
    
    <item>
      <title>外观模式</title>
      <link>https://www.stormwan.com/post/design-patterns/wai-guan-mo-shi/</link>
      <pubDate>Sat, 04 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/design-patterns/wai-guan-mo-shi/</guid>
      <description>外观模式 通过在必需的逻辑和方法的集合前创建简单的外观接口，外观设计模式隐藏了调用对象的复杂性。 外观设计模式和建造者模式非常相似，建造者模式一</description>
    </item>
    
    <item>
      <title>中介者模式</title>
      <link>https://www.stormwan.com/post/design-patterns/zhong-jie-zhe-mo-shi/</link>
      <pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/design-patterns/zhong-jie-zhe-mo-shi/</guid>
      <description>中介者模式 中介者模式用于开发一个对象，这个对象能够在类似对象相互之间不直接相互的情况下传送或者调解对这些对象的集合的修改。一般处理具有类似属</description>
    </item>
    
    <item>
      <title>解释器模式</title>
      <link>https://www.stormwan.com/post/design-patterns/jie-shi-qi-mo-shi/</link>
      <pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/design-patterns/jie-shi-qi-mo-shi/</guid>
      <description>解释器模式 用于分析一个实体的关键元素，并且针对每个元素提供自己的解释或相应动作。解释器模式非常常用，比如PHP的模板引擎 就是非常常见的一种解</description>
    </item>
    
    <item>
      <title>策略模式</title>
      <link>https://www.stormwan.com/post/design-patterns/ce-lve-mo-shi/</link>
      <pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/design-patterns/ce-lve-mo-shi/</guid>
      <description>策略模式 策略模式设计帮助构建的对象不必自身包含逻辑，而是能够根据需要利用其他对象中的算法。 使用场景 例如有一个CD类，我们类存储了CD的信息。</description>
    </item>
    
    <item>
      <title>装饰器模式</title>
      <link>https://www.stormwan.com/post/design-patterns/zhuang-shi-qi-mo-shi/</link>
      <pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/design-patterns/zhuang-shi-qi-mo-shi/</guid>
      <description>装饰器 装饰器模式，对已有对象的部分内容或者功能进行调整，但是不需要修改原始对象结构，可以使用装饰器设 应用场景 设计一个UserInfo类，里面</description>
    </item>
    
    <item>
      <title>观察者模式</title>
      <link>https://www.stormwan.com/post/design-patterns/guan-cha-zhe-mo-shi/</link>
      <pubDate>Mon, 30 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/design-patterns/guan-cha-zhe-mo-shi/</guid>
      <description>观察者模式 观察者设计模式能够更便利创建和查看目标对象状态的对象，并且提供和核心对象非耦合的置顶功能性。观察者设计模式非常常用，在一般复杂的W</description>
    </item>
    
    <item>
      <title>Go语言环境搭建</title>
      <link>https://www.stormwan.com/post/go-yu-yan-huan-jing-da-jian/</link>
      <pubDate>Mon, 25 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/go-yu-yan-huan-jing-da-jian/</guid>
      <description>Go语言环境搭建 1. 安装Git 因为golang是通过git来管理远程包的，所以我们首先要安装git，下载地址：http://www.git-s</description>
    </item>
    
    <item>
      <title>Nginx 1.5.2 &#43; PHP 5.5.1 &#43; MySQL 5.6.10 在 CentOS 下的编译安装</title>
      <link>https://www.stormwan.com/post/nginx-1.5.2-php-5.5.1-mysql-5.6.10-zai-centos-xia-de-bian-yi-an-zhuang/</link>
      <pubDate>Sun, 21 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/nginx-1.5.2-php-5.5.1-mysql-5.6.10-zai-centos-xia-de-bian-yi-an-zhuang/</guid>
      <description>1、安装Nginx 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 mkdir -p /Data/tgz cd /Data/tgz yum install wget yum install pcre yum install openssl* yum -y install gcc gcc-c++ autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses</description>
    </item>
    
    <item>
      <title>Nginx 0.8.x &#43; PHP 5.2.13（FastCGI）搭建胜过Apache十倍的Web服务器</title>
      <link>https://www.stormwan.com/post/nginx-0.8.x-php-5.2.13-fastcgi-da-jian-sheng-guo-apache-shi-bei-de-web-fu-wu-qi/</link>
      <pubDate>Sat, 16 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/nginx-0.8.x-php-5.2.13-fastcgi-da-jian-sheng-guo-apache-shi-bei-de-web-fu-wu-qi/</guid>
      <description>前言：本文是我撰写的关于搭建“Nginx + PHP（FastCGI）”Web服务器的第6篇文章。本系列文章作为国内最早详细介绍 Nginx + PHP 安装、配置</description>
    </item>
    
    <item>
      <title>LNMP运行环境其它安装处理</title>
      <link>https://www.stormwan.com/post/lnmp-yun-xing-huan-jing-qi-ta-an-zhuang-chu-li/</link>
      <pubDate>Mon, 11 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/lnmp-yun-xing-huan-jing-qi-ta-an-zhuang-chu-li/</guid>
      <description>隐藏nginx版本信息 编辑nginx.conf 在 http{} 里加上 server_tokens off; 1 2 3 4 5 6 7 8 9 http { ...... sendfile on; tcp_nopush on; keepalive_timeout 60; tcp_nodelay on; server_tokens off; ...... } 编辑php-fpm配置文件，如f</description>
    </item>
    
    <item>
      <title>php-fpm配置</title>
      <link>https://www.stormwan.com/post/php-fpm-pei-zhi/</link>
      <pubDate>Mon, 11 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/php-fpm-pei-zhi/</guid>
      <description>转 php-fpm配置 http://www.cnblogs.com/xiangxiaodong/p/3493039.html php 5.3.6 中 php-fpm 配置 成 服务启动 从php5.3.3开始 源码中开始包含 php-fpm，不用专门再打补丁了，只需要解开源码直接con</description>
    </item>
    
    <item>
      <title>CentOS minimal 初始化设置</title>
      <link>https://www.stormwan.com/post/centos-minimal-chu-shi-hua-she-zhi/</link>
      <pubDate>Tue, 05 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/centos-minimal-chu-shi-hua-she-zhi/</guid>
      <description>CentOS-6.5-x86_64 minimal 迷你版安装笔记 - 系统初始化 参考文章http://blog.csdn.net/xxd851116/article/details/1741</description>
    </item>
    
    <item>
      <title>搭建LNMP运行环境问题汇总</title>
      <link>https://www.stormwan.com/post/da-jian-lnmp-yun-xing-huan-jing-wen-ti-hui-zong/</link>
      <pubDate>Tue, 05 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/da-jian-lnmp-yun-xing-huan-jing-wen-ti-hui-zong/</guid>
      <description>CentOS_6.5_x64 + Nginx 0.8.x + PHP 5.2.14（FastCGI）+ MySQL 5.5.3 参考文章 http://zyan.cc/nginx_php_v6/ 1. VMWare克隆或复制CentOS虚拟机后无法上网的解决,执行service network r</description>
    </item>
    
    <item>
      <title>虚拟机安装CentOS</title>
      <link>https://www.stormwan.com/post/xu-ni-ji-an-zhuang-centos/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/xu-ni-ji-an-zhuang-centos/</guid>
      <description>VirtualBox安装迷你版CentOS minimal.iso 迷你版对于服务器安装很适合，小巧，安装快速；放入小U，携带方便 做成自动化安装也很方便 centos</description>
    </item>
    
    <item>
      <title>Linux系统安装配置</title>
      <link>https://www.stormwan.com/post/linux-xi-tong-an-zhuang-pei-zhi/</link>
      <pubDate>Wed, 19 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/linux-xi-tong-an-zhuang-pei-zhi/</guid>
      <description>解决方案 在Windows7 32位操作系统通过虚拟机来运行Linux 本机已搭建虚拟环境 系统相关准备 Linux系统 CentOS-5.5-i386-bin-DVD.iso 远程登录管理工具 SSHSecureShellClient-3.2.9.exe 虚拟机运行</description>
    </item>
    
    <item>
      <title>Linux用户管理</title>
      <link>https://www.stormwan.com/post/linux-yong-hu-guan-li/</link>
      <pubDate>Tue, 14 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/linux-yong-hu-guan-li/</guid>
      <description>为什么普通用户可以更改密码？ SetUID的定义：当一个可执行程序具有SetUID权限，普通用户执行这个程序时，将以这个程序所有者的身份执行。</description>
    </item>
    
    <item>
      <title>Linux常用命令</title>
      <link>https://www.stormwan.com/post/linux-chang-yong-ming-ling/</link>
      <pubDate>Wed, 25 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/linux-chang-yong-ming-ling/</guid>
      <description>基础命令 软件类型 c/s:由个人下载安装软件 升级包 b/s:运行在浏览器上,软件安装 升级包由官方完成 linux常用命令 1 2 3 4 5 6 7 8 9 10 11 12 13</description>
    </item>
    
    <item>
      <title>虚拟机介绍</title>
      <link>https://www.stormwan.com/post/xu-ni-ji-jie-shao/</link>
      <pubDate>Thu, 29 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.stormwan.com/post/xu-ni-ji-jie-shao/</guid>
      <description>Local Machine CentOS_6_x64_Origin DEVICE=eth0 HWADDR=&amp;quot;00:0c:29:29:e0:45&amp;quot; 192.168.233.128 CentOS_6_x64_A DEVICE=eth0 HWADDR=&amp;quot;00:0c:29:db:6d:ba&amp;quot; 192.168.233.131 CentOS_6_x64_B DEVICE=eth1 HWADDR=&amp;quot;00:0c:29:1a:ef:b0&amp;quot; 192.168.233.132 CentOS_6_x64_C DEVICE=eth1 HWADDR=&amp;quot;00:0c:29:20:ab:4d&amp;quot; 192.168.233.133 CentOS_6_x64_Origin_Clone DEVICE=eth1 HWADDR=&amp;quot;00:0c:29:79:5a:6b&amp;quot; 192.168.233.134 配置基于IP的虚拟主机 1 2 3 4 5 6 7 8 /sbin/ifconfig eth1:1 192.168.233.137 broadcast 192.168.233.255 netmask 255.255.255.0 up /sbin/route add -host 192.168.233.137 dev eth1:1 /sbin/ifconfig eth1:2 192.168.233.138 broadcast 192.168.233.255 netmask 255.255.255.0 up /sbin/route add -host 192.168.233.138 dev eth1:2 /sbin/ifconfig</description>
    </item>
    
  </channel>
</rss>
